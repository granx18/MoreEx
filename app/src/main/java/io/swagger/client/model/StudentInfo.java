/**
 * api documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class StudentInfo {
  
  @SerializedName("name")
  private String name = null;
  @SerializedName("studentId")
  private String studentId = null;
  @SerializedName("sportTypeId")
  private Integer sportTypeId = null;
  @SerializedName("sportDays")
  private Integer sportDays = 0;
  @SerializedName("presentSportRecordId")
  private Integer presentSportRecordId = -1;

  /**
   * 学生名字
   **/
  @ApiModelProperty(required = true, value = "学生名字")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * 学号（不是账号/一卡通号）
   **/
  @ApiModelProperty(required = true, value = "学号（不是账号/一卡通号）")
  public String getStudentId() {
    return studentId;
  }
  public void setStudentId(String studentId) {
    this.studentId = studentId;
  }

  /**
   * 运动类型的id
   **/
  @ApiModelProperty(required = true, value = "运动类型的id")
  public Integer getSportTypeId() {
    return sportTypeId;
  }
  public void setSportTypeId(Integer sportTypeId) {
    this.sportTypeId = sportTypeId;
  }

  /**
   * 已跑天数
   **/
  @ApiModelProperty(value = "已跑天数")
  public Integer getSportDays() {
    return sportDays;
  }
  public void setSportDays(Integer sportDays) {
    this.sportDays = sportDays;
  }

  /**
   * 正在进行的运动（-1：没有）
   **/
  @ApiModelProperty(value = "正在进行的运动（-1：没有）")
  public Integer getPresentSportRecordId() {
    return presentSportRecordId;
  }
  public void setPresentSportRecordId(Integer presentSportRecordId) {
    this.presentSportRecordId = presentSportRecordId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StudentInfo studentInfo = (StudentInfo) o;
    return (this.name == null ? studentInfo.name == null : this.name.equals(studentInfo.name)) &&
        (this.studentId == null ? studentInfo.studentId == null : this.studentId.equals(studentInfo.studentId)) &&
        (this.sportTypeId == null ? studentInfo.sportTypeId == null : this.sportTypeId.equals(studentInfo.sportTypeId)) &&
        (this.sportDays == null ? studentInfo.sportDays == null : this.sportDays.equals(studentInfo.sportDays)) &&
        (this.presentSportRecordId == null ? studentInfo.presentSportRecordId == null : this.presentSportRecordId.equals(studentInfo.presentSportRecordId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.studentId == null ? 0: this.studentId.hashCode());
    result = 31 * result + (this.sportTypeId == null ? 0: this.sportTypeId.hashCode());
    result = 31 * result + (this.sportDays == null ? 0: this.sportDays.hashCode());
    result = 31 * result + (this.presentSportRecordId == null ? 0: this.presentSportRecordId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class StudentInfo {\n");
    
    sb.append("  name: ").append(name).append("\n");
    sb.append("  studentId: ").append(studentId).append("\n");
    sb.append("  sportTypeId: ").append(sportTypeId).append("\n");
    sb.append("  sportDays: ").append(sportDays).append("\n");
    sb.append("  presentSportRecordId: ").append(presentSportRecordId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
